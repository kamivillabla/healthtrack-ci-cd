name: HealthTrack CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build Spring Boot executable JAR (skip tests)
      run: mvn clean package spring-boot:repackage -DskipTests

    - name: Start Spring Boot app in background
      run: |
        java -jar target/*.jar > app.log 2>&1 &
        echo $! > pid.txt

    - name: Esperar a que el servidor esté disponible
      run: |
        for i in {1..30}; do
          nc -z localhost 8080 && echo "Servidor arriba" && exit 0
          echo "Esperando... ($i/60)"
          sleep 2
        done
        echo "Servidor no se levantó a tiempo"; cat app.log; exit 1

    - name: Run Tests
      run: mvn test

    - name: Mostrar log si fallan los tests
      if: failure()
      run: |
        echo "===== LOG DE LA APLICACIÓN ====="
        cat app.log || echo "No se encontró app.log"

    - name: SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=kamivillabla_healthtrack-ci-cd -Dsonar.organization=kamivillabla -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

